<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Main_Series+ (pokemon_vg_sales)' inline='true' name='federated.0nw7fls05vkhbj1anoejy0csagzm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pokemon_vg_sales' name='excel-direct.174j3io0p8bl3x14sgv431j8yvwt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ljcoo/Coding/Projects/Project_Pokemon/Spreadsheets/pokemon_vg_sales.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Franchise_Revenue' table='[Franchise_Revenue$]' type='table'>
          <columns gridOrigin='A1:D13:no:A1:D13:0' header='yes' outcome='2'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='real' name='Gross revenue Trillion JP짜(no inflation)' ordinal='1' />
            <column datatype='real' name='Gross revenue Billion US$ (no inflation)' ordinal='2' />
            <column datatype='real' name='Gross revenue Billion US$(with inflation)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Main_Series' table='[Main_Series$]' type='table'>
            <columns gridOrigin='A1:H33:no:A1:H33:0' header='yes' outcome='2'>
              <column datatype='string' name='Year' ordinal='0' />
              <column datatype='string' name='Platform' ordinal='1' />
              <column datatype='string' name='Titles' ordinal='2' />
              <column datatype='real' name='Sales(millions)' ordinal='3' />
              <column datatype='real' name='Gross(million US$)(no inflation)' ordinal='4' />
              <column datatype='real' name='Gross(million US$)(with inflation)' ordinal='5' />
              <column datatype='string' name='Generation' ordinal='6' />
              <column datatype='string' name='Region(s)' ordinal='7' />
            </columns>
          </relation>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Franchise_Revenue' table='[Franchise_Revenue$]' type='table'>
            <columns gridOrigin='A1:D13:no:A1:D13:0' header='yes' outcome='2'>
              <column datatype='string' name='Date' ordinal='0' />
              <column datatype='real' name='Gross revenue Trillion JP짜(no inflation)' ordinal='1' />
              <column datatype='real' name='Gross revenue Billion US$ (no inflation)' ordinal='2' />
              <column datatype='real' name='Gross revenue Billion US$(with inflation)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Main_Series_Generation_Sales' table='[Main_Series_Generation_Sales$]' type='table'>
            <columns gridOrigin='A1:F18:no:A1:F18:0' header='yes' outcome='6'>
              <column datatype='string' name='Titles' ordinal='0' />
              <column datatype='real' name='Sales(millions)' ordinal='1' />
              <column datatype='real' name='Gross(million US$)(no inflation)' ordinal='2' />
              <column datatype='integer' name='Gross(million US$)(with inflation)' ordinal='3' />
              <column datatype='integer' name='Generation' ordinal='4' />
              <column datatype='string' name='Region(s)' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Main_Series_Total_Sales' table='[Main_Series_Total_Sales$]' type='table'>
            <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
              <column datatype='real' name='Sales(millions)' ordinal='0' />
              <column datatype='integer' name='Gross(million US$)(no inflation)' ordinal='1' />
              <column datatype='integer' name='Gross(million US$)(with inflation)' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Mobile' table='[Mobile$]' type='table'>
            <columns gridOrigin='A1:E2:no:A1:E2:0' header='yes' outcome='6'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='Platform' ordinal='1' />
              <column datatype='string' name='Title' ordinal='2' />
              <column datatype='integer' name='Downloads' ordinal='3' />
              <column datatype='integer' name='Gross revenue' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Spin_Offs' table='[Spin_Offs$]' type='table'>
            <columns gridOrigin='A1:D72:no:A1:D72:0' header='yes' outcome='2'>
              <column datatype='string' name='Year' ordinal='0' />
              <column datatype='string' name='Platform' ordinal='1' />
              <column datatype='string' name='Title' ordinal='2' />
              <column datatype='real' name='Sales(millions)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Spin_Offs_Generation_Sales' table='[Spin_Offs_Generation_Sales$]' type='table'>
            <columns gridOrigin='A1:B13:no:A1:B13:0' header='yes' outcome='2'>
              <column datatype='string' name='Title' ordinal='0' />
              <column datatype='real' name='Sales(millions)' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Spin_Offs_Total_Sales' table='[Spin_Offs_Total_Sales$]' type='table'>
            <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='2'>
              <column datatype='string' name='Platform' ordinal='0' />
              <column datatype='string' name='Title' ordinal='1' />
              <column datatype='string' name='Sales(millions)' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Date]' value='[Franchise_Revenue].[Date]' />
          <map key='[Downloads]' value='[Mobile].[Downloads]' />
          <map key='[Generation (Main!Series!Generation!Sales)]' value='[Main_Series_Generation_Sales].[Generation]' />
          <map key='[Generation]' value='[Main_Series].[Generation]' />
          <map key='[Gross revenue Billion US$ (no inflation)]' value='[Franchise_Revenue].[Gross revenue Billion US$ (no inflation)]' />
          <map key='[Gross revenue Billion US$(with inflation)]' value='[Franchise_Revenue].[Gross revenue Billion US$(with inflation)]' />
          <map key='[Gross revenue Trillion JP짜(no inflation)]' value='[Franchise_Revenue].[Gross revenue Trillion JP짜(no inflation)]' />
          <map key='[Gross revenue]' value='[Mobile].[Gross revenue]' />
          <map key='[Gross(million US$)(no inflation) (Main!Series!Generation!Sales)]' value='[Main_Series_Generation_Sales].[Gross(million US$)(no inflation)]' />
          <map key='[Gross(million US$)(no inflation) (Main!Series!Total!Sales)]' value='[Main_Series_Total_Sales].[Gross(million US$)(no inflation)]' />
          <map key='[Gross(million US$)(no inflation)]' value='[Main_Series].[Gross(million US$)(no inflation)]' />
          <map key='[Gross(million US$)(with inflation) (Main!Series!Generation!Sales)]' value='[Main_Series_Generation_Sales].[Gross(million US$)(with inflation)]' />
          <map key='[Gross(million US$)(with inflation) (Main!Series!Total!Sales)]' value='[Main_Series_Total_Sales].[Gross(million US$)(with inflation)]' />
          <map key='[Gross(million US$)(with inflation)]' value='[Main_Series].[Gross(million US$)(with inflation)]' />
          <map key='[Platform (Mobile)]' value='[Mobile].[Platform]' />
          <map key='[Platform (Spin!Offs!Total!Sales)]' value='[Spin_Offs_Total_Sales].[Platform]' />
          <map key='[Platform (Spin!Offs)]' value='[Spin_Offs].[Platform]' />
          <map key='[Platform]' value='[Main_Series].[Platform]' />
          <map key='[Region(s) (Main!Series!Generation!Sales)]' value='[Main_Series_Generation_Sales].[Region(s)]' />
          <map key='[Region(s)]' value='[Main_Series].[Region(s)]' />
          <map key='[Sales(millions) (Main!Series!Generation!Sales)]' value='[Main_Series_Generation_Sales].[Sales(millions)]' />
          <map key='[Sales(millions) (Main!Series!Total!Sales)]' value='[Main_Series_Total_Sales].[Sales(millions)]' />
          <map key='[Sales(millions) (Spin!Offs!Generation!Sales)]' value='[Spin_Offs_Generation_Sales].[Sales(millions)]' />
          <map key='[Sales(millions) (Spin!Offs!Total!Sales)]' value='[Spin_Offs_Total_Sales].[Sales(millions)]' />
          <map key='[Sales(millions) (Spin!Offs)]' value='[Spin_Offs].[Sales(millions)]' />
          <map key='[Sales(millions)]' value='[Main_Series].[Sales(millions)]' />
          <map key='[Title (Mobile)]' value='[Mobile].[Title]' />
          <map key='[Title (Spin!Offs!Generation!Sales)]' value='[Spin_Offs_Generation_Sales].[Title]' />
          <map key='[Title (Spin!Offs!Total!Sales)]' value='[Spin_Offs_Total_Sales].[Title]' />
          <map key='[Title]' value='[Spin_Offs].[Title]' />
          <map key='[Titles (Main!Series!Generation!Sales)]' value='[Main_Series_Generation_Sales].[Titles]' />
          <map key='[Titles]' value='[Main_Series].[Titles]' />
          <map key='[Year (Mobile)]' value='[Mobile].[Year]' />
          <map key='[Year (Spin!Offs)]' value='[Spin_Offs].[Year]' />
          <map key='[Year]' value='[Main_Series].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Platform</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Platform]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Platform</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Titles</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Titles]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Titles</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales(millions)]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Sales(millions)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross(million US$)(no inflation)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross(million US$)(no inflation)]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Gross(million US$)(no inflation)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross(million US$)(with inflation)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross(million US$)(with inflation)]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Gross(million US$)(with inflation)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Generation]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Generation</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region(s)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region(s)]</local-name>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias>Region(s)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Main_Series]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H33:no:A1:H33:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Franchise_Revenue]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross revenue Trillion JP짜(no inflation)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross revenue Trillion JP짜(no inflation)]</local-name>
            <parent-name>[Franchise_Revenue]</parent-name>
            <remote-alias>Gross revenue Trillion JP짜(no inflation)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross revenue Billion US$ (no inflation)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross revenue Billion US$ (no inflation)]</local-name>
            <parent-name>[Franchise_Revenue]</parent-name>
            <remote-alias>Gross revenue Billion US$ (no inflation)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross revenue Billion US$(with inflation)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross revenue Billion US$(with inflation)]</local-name>
            <parent-name>[Franchise_Revenue]</parent-name>
            <remote-alias>Gross revenue Billion US$(with inflation)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Franchise_Revenue]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D13:no:A1:D13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Titles</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Titles (Main!Series!Generation!Sales)]</local-name>
            <parent-name>[Main_Series_Generation_Sales]</parent-name>
            <remote-alias>Titles</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales(millions) (Main!Series!Generation!Sales)]</local-name>
            <parent-name>[Main_Series_Generation_Sales]</parent-name>
            <remote-alias>Sales(millions)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross(million US$)(no inflation)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross(million US$)(no inflation) (Main!Series!Generation!Sales)]</local-name>
            <parent-name>[Main_Series_Generation_Sales]</parent-name>
            <remote-alias>Gross(million US$)(no inflation)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross(million US$)(with inflation)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gross(million US$)(with inflation) (Main!Series!Generation!Sales)]</local-name>
            <parent-name>[Main_Series_Generation_Sales]</parent-name>
            <remote-alias>Gross(million US$)(with inflation)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Generation (Main!Series!Generation!Sales)]</local-name>
            <parent-name>[Main_Series_Generation_Sales]</parent-name>
            <remote-alias>Generation</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region(s)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region(s) (Main!Series!Generation!Sales)]</local-name>
            <parent-name>[Main_Series_Generation_Sales]</parent-name>
            <remote-alias>Region(s)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Main_Series_Generation_Sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F18:no:A1:F18:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales(millions) (Main!Series!Total!Sales)]</local-name>
            <parent-name>[Main_Series_Total_Sales]</parent-name>
            <remote-alias>Sales(millions)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross(million US$)(no inflation)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gross(million US$)(no inflation) (Main!Series!Total!Sales)]</local-name>
            <parent-name>[Main_Series_Total_Sales]</parent-name>
            <remote-alias>Gross(million US$)(no inflation)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross(million US$)(with inflation)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gross(million US$)(with inflation) (Main!Series!Total!Sales)]</local-name>
            <parent-name>[Main_Series_Total_Sales]</parent-name>
            <remote-alias>Gross(million US$)(with inflation)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Main_Series_Total_Sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Mobile)]</local-name>
            <parent-name>[Mobile]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Platform</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Platform (Mobile)]</local-name>
            <parent-name>[Mobile]</parent-name>
            <remote-alias>Platform</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title (Mobile)]</local-name>
            <parent-name>[Mobile]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Downloads</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Downloads]</local-name>
            <parent-name>[Mobile]</parent-name>
            <remote-alias>Downloads</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gross revenue]</local-name>
            <parent-name>[Mobile]</parent-name>
            <remote-alias>Gross revenue</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Mobile]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E2:no:A1:E2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Spin!Offs)]</local-name>
            <parent-name>[Spin_Offs]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Platform</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Platform (Spin!Offs)]</local-name>
            <parent-name>[Spin_Offs]</parent-name>
            <remote-alias>Platform</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Spin_Offs]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales(millions) (Spin!Offs)]</local-name>
            <parent-name>[Spin_Offs]</parent-name>
            <remote-alias>Sales(millions)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Spin_Offs]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D72:no:A1:D72:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title (Spin!Offs!Generation!Sales)]</local-name>
            <parent-name>[Spin_Offs_Generation_Sales]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales(millions) (Spin!Offs!Generation!Sales)]</local-name>
            <parent-name>[Spin_Offs_Generation_Sales]</parent-name>
            <remote-alias>Sales(millions)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Spin_Offs_Generation_Sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B13:no:A1:B13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Platform</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Platform (Spin!Offs!Total!Sales)]</local-name>
            <parent-name>[Spin_Offs_Total_Sales]</parent-name>
            <remote-alias>Platform</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title (Spin!Offs!Total!Sales)]</local-name>
            <parent-name>[Spin_Offs_Total_Sales]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales(millions)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales(millions) (Spin!Offs!Total!Sales)]</local-name>
            <parent-name>[Spin_Offs_Total_Sales]</parent-name>
            <remote-alias>Sales(millions)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Spin_Offs_Total_Sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Year (Mobile)]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Franchise_Revenue' datatype='table' name='[__tableau_internal_object_id__].[Franchise!Revenue_534B5FBA4C1B4D9EBA7230247B312234]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Main_Series_Generation_Sales' datatype='table' name='[__tableau_internal_object_id__].[Main!Series!Generation!Sales_0F660FDF38404D7BABE0D6433C8BAEB3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Main_Series_Total_Sales' datatype='table' name='[__tableau_internal_object_id__].[Main!Series!Total!Sales_BB93EF665EDF4274B5DDE45B0008EE09]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Main_Series' datatype='table' name='[__tableau_internal_object_id__].[Main!Series_5A7888C6F1C94AAE8509419F9459859D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Mobile' datatype='table' name='[__tableau_internal_object_id__].[Mobile_1B7281CD45934924B3A88B88FE4BD4B2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Spin_Offs_Generation_Sales' datatype='table' name='[__tableau_internal_object_id__].[Spin!Offs!Generation!Sales_0C9BF5D368004A7D85EC5C533578CACD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Spin_Offs_Total_Sales' datatype='table' name='[__tableau_internal_object_id__].[Spin!Offs!Total!Sales_74FF4F2E83214FEA948C07A55FB2DCDD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Spin_Offs' datatype='table' name='[__tableau_internal_object_id__].[Spin!Offs_B37EE252385A44CFB95BEF9C421FAD6C]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Franchise_Revenue' id='Franchise!Revenue_534B5FBA4C1B4D9EBA7230247B312234'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Franchise_Revenue' table='[Franchise_Revenue$]' type='table'>
                <columns gridOrigin='A1:D13:no:A1:D13:0' header='yes' outcome='2'>
                  <column datatype='string' name='Date' ordinal='0' />
                  <column datatype='real' name='Gross revenue Trillion JP짜(no inflation)' ordinal='1' />
                  <column datatype='real' name='Gross revenue Billion US$ (no inflation)' ordinal='2' />
                  <column datatype='real' name='Gross revenue Billion US$(with inflation)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Main_Series_Generation_Sales' id='Main!Series!Generation!Sales_0F660FDF38404D7BABE0D6433C8BAEB3'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Main_Series_Generation_Sales' table='[Main_Series_Generation_Sales$]' type='table'>
                <columns gridOrigin='A1:F18:no:A1:F18:0' header='yes' outcome='6'>
                  <column datatype='string' name='Titles' ordinal='0' />
                  <column datatype='real' name='Sales(millions)' ordinal='1' />
                  <column datatype='real' name='Gross(million US$)(no inflation)' ordinal='2' />
                  <column datatype='integer' name='Gross(million US$)(with inflation)' ordinal='3' />
                  <column datatype='integer' name='Generation' ordinal='4' />
                  <column datatype='string' name='Region(s)' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Main_Series_Total_Sales' id='Main!Series!Total!Sales_BB93EF665EDF4274B5DDE45B0008EE09'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Main_Series_Total_Sales' table='[Main_Series_Total_Sales$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='real' name='Sales(millions)' ordinal='0' />
                  <column datatype='integer' name='Gross(million US$)(no inflation)' ordinal='1' />
                  <column datatype='integer' name='Gross(million US$)(with inflation)' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Main_Series' id='Main!Series_5A7888C6F1C94AAE8509419F9459859D'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Main_Series' table='[Main_Series$]' type='table'>
                <columns gridOrigin='A1:H33:no:A1:H33:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='string' name='Platform' ordinal='1' />
                  <column datatype='string' name='Titles' ordinal='2' />
                  <column datatype='real' name='Sales(millions)' ordinal='3' />
                  <column datatype='real' name='Gross(million US$)(no inflation)' ordinal='4' />
                  <column datatype='real' name='Gross(million US$)(with inflation)' ordinal='5' />
                  <column datatype='string' name='Generation' ordinal='6' />
                  <column datatype='string' name='Region(s)' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Mobile' id='Mobile_1B7281CD45934924B3A88B88FE4BD4B2'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Mobile' table='[Mobile$]' type='table'>
                <columns gridOrigin='A1:E2:no:A1:E2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Platform' ordinal='1' />
                  <column datatype='string' name='Title' ordinal='2' />
                  <column datatype='integer' name='Downloads' ordinal='3' />
                  <column datatype='integer' name='Gross revenue' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Spin_Offs_Generation_Sales' id='Spin!Offs!Generation!Sales_0C9BF5D368004A7D85EC5C533578CACD'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Spin_Offs_Generation_Sales' table='[Spin_Offs_Generation_Sales$]' type='table'>
                <columns gridOrigin='A1:B13:no:A1:B13:0' header='yes' outcome='2'>
                  <column datatype='string' name='Title' ordinal='0' />
                  <column datatype='real' name='Sales(millions)' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Spin_Offs_Total_Sales' id='Spin!Offs!Total!Sales_74FF4F2E83214FEA948C07A55FB2DCDD'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Spin_Offs_Total_Sales' table='[Spin_Offs_Total_Sales$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='2'>
                  <column datatype='string' name='Platform' ordinal='0' />
                  <column datatype='string' name='Title' ordinal='1' />
                  <column datatype='string' name='Sales(millions)' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Spin_Offs' id='Spin!Offs_B37EE252385A44CFB95BEF9C421FAD6C'>
            <properties context=''>
              <relation connection='excel-direct.174j3io0p8bl3x14sgv431j8yvwt' name='Spin_Offs' table='[Spin_Offs$]' type='table'>
                <columns gridOrigin='A1:D72:no:A1:D72:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='string' name='Platform' ordinal='1' />
                  <column datatype='string' name='Title' ordinal='2' />
                  <column datatype='real' name='Sales(millions)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Gross(million US$)(no inflation)]' />
              <expression op='[Gross revenue Billion US$ (no inflation)]' />
            </expression>
            <first-end-point object-id='Main!Series_5A7888C6F1C94AAE8509419F9459859D' />
            <second-end-point object-id='Franchise!Revenue_534B5FBA4C1B4D9EBA7230247B312234' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Gross(million US$)(no inflation)]' />
              <expression op='[Gross(million US$)(no inflation) (Main!Series!Generation!Sales)]' />
            </expression>
            <first-end-point object-id='Main!Series_5A7888C6F1C94AAE8509419F9459859D' />
            <second-end-point object-id='Main!Series!Generation!Sales_0F660FDF38404D7BABE0D6433C8BAEB3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Sales(millions)]' />
              <expression op='[Sales(millions) (Main!Series!Total!Sales)]' />
            </expression>
            <first-end-point object-id='Main!Series_5A7888C6F1C94AAE8509419F9459859D' />
            <second-end-point object-id='Main!Series!Total!Sales_BB93EF665EDF4274B5DDE45B0008EE09' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Platform]' />
              <expression op='[Platform (Mobile)]' />
            </expression>
            <first-end-point object-id='Main!Series_5A7888C6F1C94AAE8509419F9459859D' />
            <second-end-point object-id='Mobile_1B7281CD45934924B3A88B88FE4BD4B2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Sales(millions) (Spin!Offs)]' />
              <expression op='[Sales(millions) (Spin!Offs!Generation!Sales)]' />
            </expression>
            <first-end-point object-id='Spin!Offs_B37EE252385A44CFB95BEF9C421FAD6C' />
            <second-end-point object-id='Spin!Offs!Generation!Sales_0C9BF5D368004A7D85EC5C533578CACD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Sales(millions) (Spin!Offs)]' />
              <expression op='[Sales(millions) (Spin!Offs!Total!Sales)]' />
            </expression>
            <first-end-point object-id='Spin!Offs_B37EE252385A44CFB95BEF9C421FAD6C' />
            <second-end-point object-id='Spin!Offs!Total!Sales_74FF4F2E83214FEA948C07A55FB2DCDD' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (Spin!Offs)]' />
            </expression>
            <first-end-point object-id='Main!Series_5A7888C6F1C94AAE8509419F9459859D' />
            <second-end-point object-id='Spin!Offs_B37EE252385A44CFB95BEF9C421FAD6C' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Games Per Generation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Number of Games Per Generation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='string' default-role='measure' default-type='quantitative' name='[Generation]' role='dimension' type='nominal' />
            <column datatype='string' name='[Titles]' role='dimension' type='nominal' />
            <column-instance column='[Titles]' derivation='CountD' name='[ctd:Titles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Generation:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Titles:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Generation:nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Titles:qk]</cols>
      </table>
      <simple-id uuid='{CA6AFFE4-52D9-40EF-B596-EDDE967A0DE4}' />
    </worksheet>
    <worksheet name='Games Released By Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Number of  Main Series Games Released Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='string' name='[Titles]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Titles]' derivation='CountD' name='[ctd:Titles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Titles:qk]' included-values='all' />
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Year:nk]' />
              <groupfilter function='member' level='[none:Year:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Titles:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Titles:qk]</column>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year:nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Titles:qk]</cols>
      </table>
      <simple-id uuid='{9190F1E6-F622-43B3-9B9C-57C15385C507}' />
    </worksheet>
    <worksheet name='Mobile Game'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Mobile Games Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='integer' name='[Downloads]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Gross revenue]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title (Mobile)]' role='dimension' type='nominal' />
            <column-instance column='[Title (Mobile)]' derivation='None' name='[none:Title (Mobile):nk]' pivot='key' type='nominal' />
            <column-instance column='[Downloads]' derivation='Sum' name='[sum:Downloads:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross revenue]' derivation='Sum' name='[sum:Gross revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Downloads:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Gross revenue:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title (Mobile):nk]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title (Mobile):nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{062F12AC-F7ED-4478-A277-C5A9D705CE87}' />
    </worksheet>
    <worksheet name='Platform'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Main Series Pokemon Game By Platform</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='string' name='[Platform]' role='dimension' type='nominal' />
            <column-instance column='[Platform]' derivation='Count' name='[cnt:Platform:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Platform]' derivation='None' name='[none:Platform:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform:nk]'>
            <groupfilter from='&quot;3DS&quot;' function='range' level='[none:Platform:nk]' to='&quot;Switch&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[cnt:Platform:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[cnt:Platform:qk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform:nk]</cols>
      </table>
      <simple-id uuid='{48AEDF5D-2DA8-4DC7-9B55-B8FB934ADDB5}' />
    </worksheet>
    <worksheet name='Platform Spin-Off'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Main Series Pokemon Game By Platform</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='string' name='[Platform (Spin!Offs)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Title]' derivation='CountD' name='[ctd:Title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Platform (Spin!Offs)]' derivation='None' name='[none:Platform (Spin!Offs):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform (Spin!Offs):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Platform (Spin!Offs):nk]' />
              <groupfilter function='member' level='[none:Platform (Spin!Offs):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform (Spin!Offs):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Title:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform (Spin!Offs):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Title:qk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform (Spin!Offs):nk]</cols>
      </table>
      <simple-id uuid='{47E3485E-5709-46E3-B7E2-F0F7237B96B1}' />
    </worksheet>
    <worksheet name='SO Games Released By Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Number of Spin-Off Games Released Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='string' name='[Year (Spin!Offs)]' role='dimension' type='nominal' />
            <column-instance column='[Title]' derivation='Count' name='[cnt:Title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Title]' derivation='CountD' name='[ctd:Title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (Spin!Offs)]' derivation='None' name='[none:Year (Spin!Offs):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year (Spin!Offs):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[cnt:Title:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year (Spin!Offs):nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[ctd:Title:qk]</cols>
      </table>
      <simple-id uuid='{D74B31D7-79AA-421E-BA80-BF7704CA3037}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Highest Selling Spin-Off Games</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='real' name='[Sales(millions) (Spin!Offs)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales(millions) (Spin!Offs)]' derivation='Sum' name='[sum:Sales(millions) (Spin!Offs):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales(millions) (Spin!Offs)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Title:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs):qk]' scope='cols' value='Sales(millions) ' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title:nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs):qk]</cols>
      </table>
      <simple-id uuid='{A390E287-643C-4D2C-9BE8-B31F15A02632}' />
    </worksheet>
    <worksheet name='Top 10 Highest Selling Main Series Video Games'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Top 10 Highest Selling Main Series Video Games</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='real' name='[Sales(millions)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Titles]' role='dimension' type='nominal' />
            <column-instance column='[Titles]' derivation='None' name='[none:Titles:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales(millions)]' derivation='Sum' name='[sum:Sales(millions):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales(millions)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Titles:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions):qk]</cols>
      </table>
      <simple-id uuid='{7C6431E6-204F-4556-B6CF-60DA5996E43B}' />
    </worksheet>
    <worksheet name='Top Gross MS Games No Inflation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Top 10 Grossing Main Series Video Games (No Inflation)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='real' name='[Gross(million US$)(no inflation)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Titles]' role='dimension' type='nominal' />
            <column-instance column='[Titles]' derivation='None' name='[none:Titles:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross(million US$)(no inflation)]' derivation='Sum' name='[sum:Gross(million US$)(no inflation):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Gross(million US$)(no inflation)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Titles:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Gross(million US$)(no inflation):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Gross(million US$)(no inflation):qk]' scope='cols' value='Gross(million US$)' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Gross(million US$)(no inflation):qk]</cols>
      </table>
      <simple-id uuid='{7D2F9601-676F-4721-B829-9C66BB8A8A8F}' />
    </worksheet>
    <worksheet name='Top Gross MS Games With Inflation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Top 10 Grossing Main Series Video Games (With Inflation)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='real' name='[Gross(million US$)(with inflation)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Titles]' role='dimension' type='nominal' />
            <column-instance column='[Titles]' derivation='None' name='[none:Titles:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross(million US$)(with inflation)]' derivation='Sum' name='[sum:Gross(million US$)(with inflation):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Gross(million US$)(with inflation)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Titles:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Gross(million US$)(with inflation):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Gross(million US$)(with inflation):qk]' scope='cols' value='Gross(million US$)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Gross(million US$)(with inflation):qk]</cols>
      </table>
      <simple-id uuid='{67E37C3E-6D07-4D17-A078-14857D5A4404}' />
    </worksheet>
    <worksheet name='Top Pokemon Spin-Off Series'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Highest Selling Spin-Off Series</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main_Series+ (pokemon_vg_sales)' name='federated.0nw7fls05vkhbj1anoejy0csagzm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nw7fls05vkhbj1anoejy0csagzm'>
            <column datatype='real' name='[Sales(millions) (Spin!Offs!Generation!Sales)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Title (Spin!Offs!Generation!Sales)]' role='dimension' type='nominal' />
            <column-instance column='[Title (Spin!Offs!Generation!Sales)]' derivation='None' name='[none:Title (Spin!Offs!Generation!Sales):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales(millions) (Spin!Offs!Generation!Sales)]' derivation='Sum' name='[sum:Sales(millions) (Spin!Offs!Generation!Sales):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title (Spin!Offs!Generation!Sales):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs!Generation!Sales):qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs!Generation!Sales):qk]' scope='cols' value='Sales(millions)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs!Generation!Sales):qk]' value='108' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title (Spin!Offs!Generation!Sales):nk]</rows>
        <cols>[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs!Generation!Sales):qk]</cols>
      </table>
      <simple-id uuid='{4F918482-46E8-4F71-922B-050BAE393F2E}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Platform'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B88FB4D-53B1-4341-992F-0CEB3ECE721C}' />
    </window>
    <window class='worksheet' name='Games Released By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86D5095E-2A21-4E4C-B2A5-65D4311A1B51}' />
    </window>
    <window class='worksheet' name='Top Gross MS Games No Inflation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A3B5330-FAC4-4D95-9630-8FCF9B646B55}' />
    </window>
    <window class='worksheet' name='Top Gross MS Games With Inflation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B091F7FF-0730-4A50-8B38-884EEF06A95F}' />
    </window>
    <window class='worksheet' name='Top 10 Highest Selling Main Series Video Games'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{820216FE-AAC6-45C1-9E5F-92C163AA86AF}' />
    </window>
    <window class='worksheet' name='Games Per Generation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Titles:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3214097-E143-4D54-B86A-BE1684038933}' />
    </window>
    <window class='worksheet' name='Mobile Game'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[:Measure Names]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title (Mobile):nk]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year (Mobile):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE42E175-A32D-4884-BF79-467F7F1431B1}' />
    </window>
    <window class='worksheet' name='Platform Spin-Off'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Platform (Spin!Offs):nk]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F31C0C0-3A7E-4F95-B1C0-C88BCDD852BD}' />
    </window>
    <window class='worksheet' name='SO Games Released By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title:nk]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Year (Spin!Offs):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01ECF6C7-2573-42A2-88A1-7A48E14538CB}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0nw7fls05vkhbj1anoejy0csagzm].[sum:Sales(millions) (Spin!Offs):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Sales(millions) (Spin!Offs):nk]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title (Spin!Offs!Total!Sales):nk]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F90A9D3F-8064-4B02-9831-807AD7278461}' />
    </window>
    <window class='worksheet' maximized='true' name='Top Pokemon Spin-Off Series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Sales(millions) (Spin!Offs!Generation!Sales):nk]</field>
            <field>[federated.0nw7fls05vkhbj1anoejy0csagzm].[none:Title (Spin!Offs!Generation!Sales):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B908451F-E46C-4989-98E2-1F519D76CD5D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Games Per Generation' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Games Released By Year' width='192'>
      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
      y9YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='45' name='Mobile Game' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAtCAYAAAD4BmRbAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKgElEQVR4nO2cf1BU1xXHP8kstoruZERBRlMqyaAIomQfCiRoqBUyQcQEC9Et6IBONWiN
      RKXGsEywulETjSFobINlNSbqlLT+SiMEU4wigUUEXcBtJOKPIEaZunF1hJ15/WMXXVxNUJe4
      6d7PDDNwOO/es+fd77vnvvfuPiLLsoxA4KY8+rADEAgeJkIAArdGCEDg1ggBCNwaIQCBWyME
      IHBrhAAEbo0QgMCtEQIQuDVCAAK3RghA4NYIAQjcGsXDDkAgAKBZhzoxj5M3Db3pHxJN+vxX
      SAzt32MDVcwAApcibq0evV6PvryItc9Z2PpyHOm6Jiw91J8QgMA16eVNcNJKPsqOxJi3iAJj
      z3QjBCBwaZQxySQoz7C3pP6mzdJWg27RVKIjJCQpiikvv095m22OMH/Kq5LE3KLLt/wPLEOS
      JOLzb7VBfT7xUrwQgMDFUQQREgotlTWcB7BUs27abD56dAZbyqylUsbAf/DHaVrKzYDnWCLD
      oOpo7c2yydhQx+jYWOhsAzhfU0mLcpwQgMDV8aRvX8BiwQJc3vUBO0y/ITMnnsd7Ab28mZi9
      jDjTLrZ+dhnwQgofBkeqqQXgPDWVEJocy1PGo9SaAczUHjXgETVWCEDg6pi5ehVQ9qUvcLL+
      GPgHMdzTzkXhh78/VNUZAPALi8TXdIwTzYC5lqPGMYSGBBEyugZDI0AjhhqIHKsSAhC4OtbB
      6hsciFd3DxkRzjjlSeoMZmg0UBOpYhRehIYN5NiJZmiqRW8KI3KspxCAwLUxffoRn5h+xaSJ
      IwAYNmI0NBloNNs5mRsxNEFYSJDNMApVBJRX19JUq8c3JAhPwH+UREudgeaaKk4NC0fyEneB
      BK5Ku4mvS5aTvrycgPlvkR5gNXslzCJZeYC1b+zhbDvQfpGS1Ws5oEwg5bnOOULBqKfC6Kjc
      R0H5d4wO9rOahwcRWn6Yv1RV4RsZhh/iSbDAxdiXKbEPuPkkeMO+rk+CFSoWfvxXvFeuIHX8
      G3zf0ZshY9S8+/EsIu3WBV5SOMO0eexviWX1KJvRcxRPBWhY97mS5E3WGeUR8b1AAndGlEAC
      t0YIQODWCAEI3JofXQTr9fqfIg6B4KEgFsECt0aUQAK3RghA4NYIAQjcmgcSQLNOjSRJt34i
      oolL01Jytv1eWkGnlpByDnbL23Qwh1gpivRNNbT11D65B6T9bAnrXu7csCERER1HmkbHkRYX
      DbibtJ8tQTstCrWuuXsHWFo4oE2x5iEimhTtARxS4CyfO2Cq07FoShSSJBE1ZRG6OpOjk/wA
      nC6cLqtUGrnM9neHuUku1kyRVeGp8oenu92KXDhdJas0ZT/u+u1uOfP5BDm39LLccZ8x9zRX
      yjRyjCpGnldYJX9rtkZ548p/5IOF2XL29m4nxbW4cUYuXvmS/GzcAjk3c5I8vbA7n+OqfDg3
      Ro7RFMutN2RZvtEqF2ti5Jjcw/JVp/vcgdMfyqnPpMoF9Wa5Q+6QzfUFcuozt43L0x/KThWA
      LMuy3FEma8JVclLBqe620n0BuDpX9smZ4Sp5esEplxXo/XB6e7a8srhJNndYz3m3BHBhu5z+
      wnuywT4RHQb5vRfS5e0XnOzjQIf8lTZGztx3pYv1yr5MOUb7le3cWH2cvwawbU441XzOZmjn
      bImWtJgoWzmQgma3kR8qkkwHc4iN+B1rKm1TlqWFA9o0YqIkJCmC6KldpzNrKfYntn65iUVT
      o4mwTXlFxovU7NCQEh2BJEUw6ZUimuymzvazJWjTYoiylW8pmt0Y7QI7mCMhqTdTU7MDTYq1
      3YjoORTU27+Le4vLJXso6xiPOtn/xx+wtJ+lxP4zpWjYbbyX0vGnwy85l6UTh9LnHl6dNFdX
      0johmhH2xyhGED2hlcpqs1N9HDFSdTiYCeOVXazK8RMIPlyF0c7H+QKwnMJ4Eob5W19BbS1a
      QJKmEdWqXVToKyjdEE2zdgazt925jrQ06ZifVUH4qgIWj1ECZsq1M/nzmQms31+BXl/GFrWM
      7g9ZFLXaH3mSr//7NK9uKeFI+WamPvpvtFn5nAuay6aSI5Rvfoleh95iW6XNvbWIBUkaGlWr
      2FWhp6J0A9HNWmbM3kaXyJr+xd5zQczdVMKRimKWhOjZmPcZl3HEUFcFw0II8rzDP7vQStGC
      JDSNKlbtqkBfUcqG6Ga0M2Zzl7T87Lj03QWGDPJxsPsMGsKF7y451ecOvXPRPAif28+Dpw+D
      zBe5ZOfjVAFYrn3DntdWsd8jjBef8wOq2ZJfhe/MZWSE9keBgj6BaeTO8cdQsJPq2xswHWT5
      3Pdhzkayx9nUe/kztu56jN8vVhPYRwH04vEX0kkcUMXnh+yHYQgT4oPx7aOAXiGEjgRCJhAf
      7IvVFMpIOrDYZoDqLflU+c5kWUYo/RWg6BNIWu4c/A0F7LQPzH8SqZ3tKvrj9RhgusrV7iSk
      WYfa7ibBzcVj9Rbyq3yZuSyDUGvnBKblMsffQMFOh6z8bPEe6LiHy2ugd4/4OODrzQAH4wC8
      fbv6OFUAij5DiV+9H/2RjST6AOcbOWGCkYEBXfz8hj4JnXs27bBc+obTJiW/HjrgVglhqKPK
      oacRZOzRszGx25vkbuM8jdbA6BKZ31CexGTdNncfPBEQBCfrMHTOzH4z2KbXo9evJc6+98YT
      mBhJ17T4YU3LCf4fJoEBAwdx9Hi9g73++FEGDRzgVJ879I63ye48dGI2UGfqFIbVp2efAwwe
      TrASjjd0/VYjY8NxUI6mc6NOJwp/NTlzBlGcZVfePBFAEKcor2rFeQxmuDUwukRmbOA4yls7
      iO611d9OJsyjjG07fvibzAYPD0bJcbqmxYg1LcHcX++uhadqDD6lX1BvnwhLPV+U+jBG5elU
      H0cCCHv6BKVlXW97mspKOfF0mO2iZ/Xp4QdhKlIzwmgpXEF+TRsWLFxr2MyKwhaC0pNQOfgr
      8J+Ry7yAY7y1RGddsA6OJ3m8B8feWUK+/qJ18dxu4usvN5G397xDC92OLDWDsJZCVuRbnydY
      rjWweUUhLUHpJDkG1j18Elg8bxRnNsxloU7PRduatt10hRtdOycjrIXCFfnUWDunYfMKCluC
      SL/vzl0Mn0mkhe5m4fISax7aL1KyfCG7Q9OY5ONkHwcUjJmWyiXtfDY3XLs57uZrL5E6bYyt
      urD69PiWSJ/E9exUvk1OVgLhbdfx6BfIxKU6Xp98t+ucH+rVizg0Rcui/FC2Lwjh+VWf8Ms1
      y3hz4fP87Tp49PMhMCqJ2XPvmoHuBMb6nUrezskiIbyN6x79CJy4FN3rkx/gCqzAX72JXSOK
      eCfvNRLz2rgO9O7/JCNfnM+8mMGdnZO4fifKt3PISgin7boH/QInslT3OndNy0OjGZ06kbyT
      9rZEpDzrb3Fr9bwxDiyVbxKT/QvW7V+IdQeiJ5FLC8las4Tk8Uv5nn4ETs6mcHEkt67bzvJp
      ZcesKRyK30tegq0s9lOTl28hd2ks4eeu03vIs8zKz0Ntn18/tXgbVOAMWimam07TrH+yWPXT
      bzO3VK9hygf+FGxM5F4vieJdIMEDY6n/O1+FvcvChzD4wUTx7qtkrrr3wQ/wP8NgaPCVrVaS
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Platform' width='192'>
      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
      H7crDax4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Platform Spin-Off' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SO Games Released By Year' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      +389LAkKPnnELQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Highest Selling Main Series Video Games' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top Gross MS Games No Inflation' width='192'>
      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
      y8fN+LL1zC/EX6wRennp41cV4ouzXL09S3mhl3hwAb3Xg0UABJEsj53FUIxEMIi44rg7y04o
      HHvkspoA3hAyioLJeL+3l2UjyksunCcA0orQg/v/qWIwSI85/mKoSprJgaucPHUB84a9bCvJ
      QlWUBwLgJMkAwlKAnvExxx9GE8AbgtFsITA/v5QgS1UJLAQwm1/uxhqd3kA4FEJVAVUhGAxh
      NBrQSwbCofADx03GF0ybqCosDF+ltWeRLQeOsWOjD70ABtlIaHHx3n2Hw2EkvR6DLD9wPBIO
      o39M4i5NAG8IxqIqpDuXGVqIkVgcp7VPoaro5RbUc+UUMH3rGouJFKHJ6/TNeSj2GXDkFjHb
      20UwkSI8dYPeGTclvhcUQNzPxSszNBxtpMRru9eZS94ifPP9XPOHSCfDXO/1k5/tQvIUkhO4
      Q9dEiHQqwvVb4+Rlux+5rBYK8cagMHq9mea2W4RVE2V1+2jcVvKdZL+b7D7Jp98MkIqHCMdE
      nN5s6g4cY3uJmb7L52ntHUc1uNn11hG2FLpQkhFutZ+ntWeMjMHFrsYjbC12v1BGi8R4J7/6
      pAlpRfbnnNq3+aChhOB4D6dOX2IuIZC3qZ7G+s3YZJFF/01OnvyGuQTkVu6isaEau/zgKKAJ
      QGNdo02BNNY1mgA01jWaADTWNZoANNY1mgA01jWaADTWNZoANNY1mgA01jWaADTWNZoANNY1
      mgA01jWaADTWNZoANNY1mgA01jWaADTWNZoANNY1mgA01jWaADTWNZoANNY1mgA01jWaADTW
      NZoANNY1mgA01jX/HxDWPAREBo8IAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top Gross MS Games With Inflation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Pokemon Spin-Off Series' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
